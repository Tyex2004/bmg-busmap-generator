<Fluent:RibbonWindow x:Class="BusMapGenerator.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:Fluent="urn:fluent-ribbon"
                     xmlns:AvalonDock="https://github.com/Dirkster99/AvalonDock"
                     xmlns:skia="clr-namespace:SkiaSharp.Views.WPF;assembly=SkiaSharp.Views.WPF"
                     mc:Ignorable="d"
                     Title="BMG - 公共汽车线路图生成器" 
                     Width="800" 
                     Height="600"
                     xmlns:ui="http://schemas.modernwpf.com/2019"
                     ui:WindowHelper.UseModernWindowStyle="False"
                     WindowState="Maximized"
                     WindowStartupLocation="CenterScreen">

    <!--创建网格-->
    <Grid>

        <!--网格：行布局预设置-->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--网格0行：功能区-->
        <Fluent:Ribbon Grid.Row="0" FontSize="13">

            <!--文件后台选项卡-->
            <Fluent:Ribbon.Menu>
                <Fluent:Backstage Margin="0, 0, 7, 0" Header="工程">
                    <Fluent:BackstageTabControl>
                        <Fluent:BackstageTabItem Header="New"/>
                        <Fluent:BackstageTabItem Header="Print"/>
                        <Fluent:Button Header="Hey" Icon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png"/>
                    </Fluent:BackstageTabControl>
                </Fluent:Backstage>
            </Fluent:Ribbon.Menu>

            <!--选项卡-->
            <Fluent:RibbonTabItem Header="好玩" ReduceOrder="Default,Default,Default,
                                                Large,Large,Large,
                                                Other,Other,Other" Fluent:KeyTip.Keys="P">
                <Fluent:RibbonGroupBox Header="Group">
                    <Fluent:Button Name="button1" Header="生成" Icon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" LargeIcon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" Fluent:KeyTip.Keys="T" VerticalAlignment="Top"  Margin="3, 3, 3, 1" Click="RunPython"/>
                    <Fluent:Button Name="button2" Header="按钮2" Icon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" LargeIcon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" SizeDefinition="Middle" Fluent:KeyTip.Keys="H"  Margin="3, 3, 3, 1"/>
                    <Fluent:Button Name="button3" Header="按钮3" Icon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" LargeIcon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" SizeDefinition="Middle" Margin="3, 1, 3, 1"/>
                    <Fluent:Button Name="button4" Header="按钮4" Icon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" LargeIcon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" SizeDefinition="Middle"  Margin="3, 1, 3, 1"/>
                </Fluent:RibbonGroupBox>
            </Fluent:RibbonTabItem>

            <!--快速访问工具栏-->
            <Fluent:Ribbon.QuickAccessItems>
                <!--使用内容或目标属性设置快速访问工具，并决定默认可见性-->
                <Fluent:QuickAccessMenuItem IsChecked="true">
                    <Fluent:Button Header="Pink" Icon="https://s2.loli.net/2024/08/13/YTpbrEMkNcSWmH2.png" Fluent:KeyTip.Keys="1" Margin="2, 2, 2, 2" Click="OpenMap"/>
                </Fluent:QuickAccessMenuItem>
                <!--目标属性可直接绑定任何控件-->
                <Fluent:QuickAccessMenuItem Target="{Binding ElementName=button1}"/>
            </Fluent:Ribbon.QuickAccessItems>

        </Fluent:Ribbon>

        <!--网格1行：AvalonDock 布局管理器-->
        <AvalonDock:DockingManager x:Name="myDockManager" Grid.Row="1">

            <!-- 文档页签模板，显示图标和标题 -->
            <AvalonDock:DockingManager.DocumentHeaderTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal" Width="60">
                        <Image Margin="0,0,4,0" Source="{Binding IconSource}" />
                        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
                    </StackPanel>
                </DataTemplate>
            </AvalonDock:DockingManager.DocumentHeaderTemplate>

            <!--布局根节点类-->
            <AvalonDock:LayoutRoot>
                <!--布局面板类-->
                <AvalonDock:LayoutPanel Orientation="Horizontal">
                    <!--左侧可停靠窗格组-->
                    <AvalonDock:LayoutAnchorablePaneGroup DockWidth="260">
                        <AvalonDock:LayoutAnchorablePane>
                            <AvalonDock:LayoutAnchorable x:Name="WPFWindow1"
                                  Title="一个左侧窗格"
                                  CanClose="True"
                                  CanHide="False"
                                  ContentId="WPFWindow1"
                                  ToolTip="WPF 组件">
                            </AvalonDock:LayoutAnchorable>
                            <AvalonDock:LayoutAnchorable x:Name="WPFWindow2"
                                  Title="另一个左侧窗格"
                                  CanClose="True"
                                  CanHide="False"
                                  ContentId="WPFWindow2"
                                  ToolTip="WPF 组件">
                                <TextBox Text="玩它"/>
                            </AvalonDock:LayoutAnchorable>
                        </AvalonDock:LayoutAnchorablePane>
                    </AvalonDock:LayoutAnchorablePaneGroup>
                    <!--文档窗格组-->
                    <AvalonDock:LayoutDocumentPaneGroup>
                        <AvalonDock:LayoutDocumentPane x:Name="LayoutDocumentPane">
                            <AvalonDock:LayoutDocument x:Name="Opener" Title="欢迎" ContentId="Opener" CanClose="False">
                                <!--加载欢迎界面-->
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="3*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="4*" />
                                    </Grid.RowDefinitions>
                                    <Label Grid.Row="1" Content="欢迎使用 BMG - 公共汽车线路图生成器！" VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="20"  />
                                    <Button Grid.Row="2" Content="打开地图" Click="OpenMap" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="26" />
                                </Grid>
                            </AvalonDock:LayoutDocument>
                            <AvalonDock:LayoutDocument x:Name="RoadPreviewer" Title="道路预览" ContentId="RoadPreviewer" CanClose="False">
                                <!--加载画布-->
                                <skia:SKElement x:Name="SkiaCanvas"
                                    PaintSurface="OnPaintSurface"
                                    MouseDown="SkiaCanvas_MouseDown"
                                    MouseMove="SkiaCanvas_MouseMove"
                                    MouseWheel="SkiaCanvas_MouseWheel"
                                    MouseUp="SkiaCanvas_MouseUp" />
                            </AvalonDock:LayoutDocument>
                            <AvalonDock:LayoutDocument x:Name="Mapper" Title="线路图" ContentId="Mapper" CanClose="False">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                    <Button Height="28" Content="点击添加 2 个文档" />
                                    <TextBox Grid.Row="1" Text="文档 1 内容" />
                                </Grid>
                            </AvalonDock:LayoutDocument>
                        </AvalonDock:LayoutDocumentPane>
                    </AvalonDock:LayoutDocumentPaneGroup>
                    <!--右侧可停靠窗格组-->
                    <AvalonDock:LayoutAnchorablePaneGroup DockWidth="260">
                        <AvalonDock:LayoutAnchorablePane>
                            <AvalonDock:LayoutAnchorable x:Name="WPFWindow4"
                          Title="右侧窗格"
                          CanClose="True"
                          CanHide="False"
                          ContentId="WPFWindow4"
                          ToolTip="WPF 组件">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <TextBox x:Name="textBox3" Text="右侧窗格内容3" Grid.Row="0"/>
                                    <TextBox Text="右侧窗格内容2" Grid.Row="1"/>
                                </Grid>
                            </AvalonDock:LayoutAnchorable>
                        </AvalonDock:LayoutAnchorablePane>
                    </AvalonDock:LayoutAnchorablePaneGroup>
                </AvalonDock:LayoutPanel>
            </AvalonDock:LayoutRoot>
            
            <!--使用metro模板-->
            <AvalonDock:DockingManager.Theme>
                <Vs2013LightTheme/>
            </AvalonDock:DockingManager.Theme>

        </AvalonDock:DockingManager>

        <!--网格2行：状态栏-->
        <Fluent:StatusBar Grid.Row="2">
            <!-- 左侧状态项 -->
            <Fluent:StatusBarItem Title="左侧项"
                          Value="150"
                          HorizontalAlignment="Left">
                <TextBlock Text="150 px" />
            </Fluent:StatusBarItem>
            <!-- 左侧分隔符 -->
            <Separator HorizontalAlignment="Left" />
            <!-- 另一个左侧状态项 -->
            <Fluent:StatusBarItem Title="第二个左侧项"
                          Value="值会显示在右键菜单"
                          ToolTip="这是一个提示"
                          Content="这个内容会显示在状态栏"
                          HorizontalAlignment="Left" />
            <!-- 右侧状态项 -->
            <Fluent:StatusBarItem Title="右侧项"
                          HorizontalAlignment="Right"
                          Value="如果没有设置 Content，则显示 Value 作为内容" />
        </Fluent:StatusBar>

    </Grid>
</Fluent:RibbonWindow>